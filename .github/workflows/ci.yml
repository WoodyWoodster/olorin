name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  # ===========================================================================
  # Elessar (Rails API) Jobs
  # ===========================================================================

  elessar-security-scan:
    name: Elessar - Security Scan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: elessar

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version-file: elessar/.ruby-version
          bundler-cache: true
          working-directory: elessar

      - name: Scan for security vulnerabilities
        run: bin/brakeman --no-pager

  elessar-lint:
    name: Elessar - Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: elessar

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version-file: elessar/.ruby-version
          bundler-cache: true
          working-directory: elessar

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  elessar-test:
    name: Elessar - Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: elessar

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libyaml-dev pkg-config

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version-file: elessar/.ruby-version
          bundler-cache: true
          working-directory: elessar

      - name: Run tests
        env:
          RAILS_ENV: test
        run: bin/rails test

  # ===========================================================================
  # Celebrimbor (Vue Frontend) Jobs
  # ===========================================================================

  celebrimbor-lint:
    name: Celebrimbor - Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: celebrimbor

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        run: pnpm lint

  celebrimbor-typecheck:
    name: Celebrimbor - Type Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: celebrimbor

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run TypeScript type check
        run: pnpm type-check

  celebrimbor-test:
    name: Celebrimbor - Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: celebrimbor

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test:unit

  celebrimbor-build:
    name: Celebrimbor - Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: celebrimbor

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: celebrimbor-dist
          path: celebrimbor/dist/
          retention-days: 7
